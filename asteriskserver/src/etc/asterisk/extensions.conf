[general]
clearglobalvars=no

[globals]
TRUNK=DAHDI/G2
tishbite_extension=505
jesse_extension=510
breckenridgest_extension=515
crossclinton_extension=610
robotron_extension=615
souwester_extension=620
upright_extension=625
ypsi_extension=630
mykle_extension=640
taylor_extension=655
opensignal_extension=660
oskar_in_extension=667
oskar_extension=530
r2d2_extension=670
xnor_extension=680
detroitbusco_extension=690
hoyt_extension=695
demo_extension=700
r2d2_incoming=19149775129       ;XXX why not +format
twilio_oskar_incoming=+15039465227
twilio_taylor_incoming=+15039266271
twilio_opensignal_incoming=+19713512383
twilio_xnor_incoming=+15034449412
twilio_ypsi_incoming=+17345476651
twilio_mykle_incoming=+15039288465
twilio_crossclinton_incoming=+19712666851
twilio_robotron_incoming=+15039266341
twilio_souwester_incoming=+13602282259
twilio_hoyt_incoming=+15039266188
twilio_breckenridgest_incoming=+13132469283
twilio_detroitbusco_incoming=+13133327495
twilio_jesse_incoming=+15034836584
twilio_tishbite_incoming=+15033889637
; this number is in use, but the variable is not
;voipms_leet_incoming=5034681337
twilio_pv_incoming=999
max_iterations=10
asterisk_root=/

[macro-say]
; first arg is name of statement file, rest are preferred subdirs,
; ignored if empty
exten => s,1,AGI(sound_path.agi,${ARG1},${ARG2})
same => n,Background(${agi_out})

[metric]
exten => s,1,AGI(metric.agi,${ARG1})
same => n,Return

; dial number with timeout if it passes filter
[macro-filterdial]
exten => s,1,Gosub(metric,s,1(macro-filterdial))
; filter or die
same => n,AGI(filter_outgoing.agi,${ARG1})
; friction, which may or may not die
same => n,AGI(friction.agi,filterdial)
; we passed, find timeout, if any, and dial
same => n,AGI(call_timeout.agi)
same => n,Macro(dial,${ARG1},${agi_out})

; dial number given by ARG1
; with timeout given by ARG2 in dial command syntax (which can be empty)
[macro-dial]
exten => s,1,Gosub(metric,s,1(macro-dial))
; wait for ratelimiter
same => n,AGI(call_ratelimit.agi)
; start trying to dial
same => n,Dial(SIP/${ARG1}@${outgoingchannel},,g${ARG2})
; we have completed the call, metric and react to the outcome
; note that we don't get here if the caller hung up first
same => n,Gosub(metric,s,1(outgoing-dialstatus-${DIALSTATUS}-${outgoingchannel}))
same => n,Goto(s,${DIALSTATUS})
; unsuccessful, try again
same => n(CHANUNAVAIL),NoOp
same => n(CONGESTION),NoOp
same => n,Playtones(congestion) 
same => n,Congestion
; successful, fall through
same => n(ANSWER),NoOp
same => n(NOANSWER),NoOp
same => n(BUSY),NoOp
same => n(CANCEL),NoOp
same => n,Hangup

[macro-setup-iteration]
exten => s,1,Set(context_iterator=0)

; increment iterator, hangup if iterator is too large, otherwise return
[macro-iterate-guard]
exten => s,1,Set(context_iterator=$[ ${context_iterator} + 1 ])
same => n,GotoIf($[ ${context_iterator} > ${max_iterations} ]?hangup)
same => n,MacroExit
same => n(hangup),Macro(say,goodbye)
same => n,Hangup

; extension to start incoming call
; this should be OK to reach without registration?
[default-incoming]
exten => _!,1,Gosub(metric,s,1(default-incoming))
; clients registered to twilio programmable voice are reaching us by a sip
; call from twilio, route accouring to how twilio describes their authorization.
; name <authname>;...                                                     
same => n,Set(tmp=${SIP_HEADER(From)})
; <authname>;...                                                          
same => n,Set(tmp=${CUT(tmp, ,2)})
; <authname>                                                              
same => n,Set(authname=${CUT(tmp,\;,1)})
same => n,Gosub(incoming-route-by-authname,s,1)
; Callers from twilio origination:
; set caller to the number called, which is in SIP_HEADER(To).
; This might just be the extension of this context, do we need all this extraction?
same => n,Set(callto=${CUT(CUT(SIP_HEADER(To),@,1),:,2)})
same => n,Goto(incoming-route-by-callto,s,1)

; XXX is this obsolete?
[incoming-route-by-authname]
exten => s,1,NoOp
same => n,Return

[incoming-route-by-callto]
; Route to appropriate context based on call origin.
exten => s,1,NoOp
; Incoming call from twilio pv.
; This is currently used to identify a call from the demo twilio pv domain.
; XXX Behavior is confusing, Linphone registers to the domain and goes to
;     default-outgoing, YATE registers and goes here?
same => n,gotoIf($["${callto}" = "${twilio_pv_incoming}"]?challenge_shadytel_main,s,1)
; Incoming call from twilio or callcentric, addressed to number forwarded.
same => n,gotoIf($["${callto}" = "${twilio_oskar_incoming}"]?ring-oskar,s,1)
same => n,gotoIf($["${callto}" = "${r2d2_incoming}"]?ring-r2d2,s,1)
same => n,gotoIf($["${callto}" = "${twilio_taylor_incoming}"]?ring-taylor,s,1)
same => n,gotoIf($["${callto}" = "${twilio_opensignal_incoming}"]?ring-opensignal,s,1)
same => n,gotoIf($["${callto}" = "${twilio_xnor_incoming}"]?ring-xnor,s,1)
same => n,gotoIf($["${callto}" = "${twilio_ypsi_incoming}"]?ring-ypsi,s,1)
same => n,gotoIf($["${callto}" = "${twilio_crossclinton_incoming}"]?ring-crossclinton,s,1)
same => n,gotoIf($["${callto}" = "${twilio_mykle_incoming}"]?ring-mykle,s,1)
same => n,gotoIf($["${callto}" = "${twilio_robotron_incoming}"]?ring-robotron,s,1)
same => n,gotoIf($["${callto}" = "${twilio_souwester_incoming}"]?ring-souwester,s,1)
same => n,gotoIf($["${callto}" = "${twilio_hoyt_incoming}"]?ring-hoyt,s,1)
same => n,gotoIf($["${callto}" = "${twilio_breckenridgest_incoming}"]?ring-breckenridgest,s,1)
same => n,gotoIf($["${callto}" = "${twilio_detroitbusco_incoming}"]?ring-detroitbusco,s,1)
same => n,gotoIf($["${callto}" = "${twilio_jesse_incoming}"]?ring-jesse,s,1)
same => n,gotoIf($["${callto}" = "${twilio_tishbite_incoming}"]?ring-tishbite,s,1)
; Fallback, go to the incoming menu.
; In practice, incoming call from voip.ms, addressed to number forwarded, goes here
same => n,Goto(incoming_leet,s,1)

[ring-oskar]
exten => s,1,Gosub(metric,s,1(ring-oskar))
same => n,Dial(SIP/${oskar_extension}@twilio-pv-termination)
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-oskar))

[ring-r2d2]
exten => s,1,Gosub(metric,s,1(ring-r2d2))
same => n,Dial(SIP/${r2d2_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-r2d2))

[ring-xnor]
exten => s,1,Gosub(metric,s,1(ring-xnor))
same => n,Dial(SIP/${xnor_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-xnor))

[ring-breckenridgest]
exten => s,1,Gosub(metric,s,1(ring-breckenridgest))
same => n,Dial(SIP/${breckenridgest_extension}@twilio-pv-termination)
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-breckenridgest))

[ring-jesse]
exten => s,1,Gosub(metric,s,1(ring-jesse))
same => n,Dial(SIP/${jesse_extension}@twilio-pv-termination)
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-jesse))

[ring-tishbite]
exten => s,1,Gosub(metric,s,1(ring-tishbite))
same => n,Dial(SIP/${tishbite_extension}@twilio-pv-termination)
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-tishbite))

[ring-detroitbusco]
exten => s,1,Gosub(metric,s,1(ring-detroitbusco))
same => n,Dial(SIP/${detroitbusco_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-detroitbusco))

[ring-taylor]
exten => s,1,Gosub(metric,s,1(ring-taylor))
same => n,Dial(SIP/${taylor_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-taylor))

[ring-opensignal]
exten => s,1,Gosub(metric,s,1(ring-opensignal))
same => n,Dial(SIP/${opensignal_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-opensignal))

[ring-ypsi]
exten => s,1,Gosub(metric,s,1(ring-ypsi))
same => n,Dial(SIP/${ypsi_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-ypsi))

[ring-crossclinton]
exten => s,1,Gosub(metric,s,1(ring-crossclinton))
same => n,Dial(SIP/${crossclinton_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-crossclinton))

[ring-mykle]
exten => s,1,Gosub(metric,s,1(ring-mykle))
same => n,Dial(SIP/${mykle_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-mykle))

[ring-robotron]
exten => s,1,Gosub(metric,s,1(ring-robotron))
same => n,Dial(SIP/${robotron_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-robotron))

[ring-souwester]
exten => s,1,Gosub(metric,s,1(ring-souwester))
same => n,Dial(SIP/${souwester_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-souwester))

[ring-hoyt]
exten => s,1,Gosub(metric,s,1(ring-hoyt))
same => n,Dial(SIP/${hoyt_extension})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-hoyt))

[admin-auth]
exten => s,1,Gosub(metric,s,1(admin-auth))
same => n,AGI(incoming_ratelimit.agi)
same => n,Macro(setup-iteration)    
same => n(postsetup),NoOp
same => n,Macro(iterate-guard)
same => n,Authenticate(${admin_password})
same => n,Wait(0.25)    ;avoid digits leaking into next menu
same => n,Goto(admin_main,s,1)

[incoming-fake-admin-auth]
    exten => s,1,Gosub(metric,s,1(incoming-fake-admin-auth))
    same => n,Macro(setup-iteration)    
    same => n(postsetup),NoOp
    same => n,Macro(iterate-guard)    
    same => n,Authenticate(592751)
    same => n,Wait(0.25)    ;avoid digits leaking into next menu
    same => n,Hangup

[member-auth]
exten => s,1,Gosub(metric,s,1(member-auth))
same => n,AGI(incoming_ratelimit.agi)
same => n,Macro(setup-iteration)    
same => n(postsetup),NoOp
same => n,Macro(iterate-guard)
same => n,Authenticate(${member_password})
same => n,Wait(0.25)    ;avoid digits leaking into next menu
same => n,Goto(member_main,s,1)

; context to start outgoing call
; Softphone clients should generally go to outgoing-by-calling-extension, on 999.
[default-outgoing]
exten => 988,1,Set(destination=challenge_shadytel_main)
same => n,Goto(outgoing-by-destination,s,1)
exten => 989,1,Set(destination=challenge_main)
same => n,Goto(outgoing-by-destination,s,1)
exten => 993,1,Set(destination=member_main)
same => n,Goto(outgoing-by-destination,s,1)
exten => 994,1,Set(destination=outgoing_ypsi)
same => n,Goto(outgoing-by-destination,s,1)
exten => 995,1,Set(destination=outgoing_portland)
same => n,Goto(outgoing-by-destination,s,1)
exten => 996,1,Set(destination=restricted-outgoing-dialtone-wrapper)
same => n,Goto(outgoing-by-destination,s,1)
exten => 997,1,Set(destination=oracle-dead)
same => n,Goto(outgoing-by-destination,s,1)
exten => 998,1,Set(destination=admin_main)
same => n,Goto(outgoing-by-destination,s,1)
; 999 dialed by public phone SIP clients
exten => 999,1,Goto(outgoing-by-calling-extension,s,1)
; 1000 used by r2d2, obsolete?
exten => 1000,1,Set(destination=outgoing-dialtone-wrapper)
same => n,Goto(outgoing-by-destination,s,1)
; 1001 used by incoming line
exten => 1001,1,Set(destination=incoming_leet)
same => n,Goto(outgoing-by-destination,s,1)

[outgoing-by-destination]
; go to a destination determined by a variable value
exten => s,1,Gosub(metric,s,1(outgoing-by-destination))
same => n,Set(CALLERID(num)=${callerid})
same => n,Goto(${destination},s,1)

[outgoing-by-calling-extension]
exten => s,1,Gosub(metric,s,1(outgoing-by-calling-extension))
same => n,Set(CALLERID(num)=${callerid})
same => n,Goto(${outgoing_context},s,1)

[outgoing-dialtone-wrapper]
exten => s,1,Gosub(metric,s,1(outgoing-dialtone-wrapper))
same => n,DISA(no-password,outgoing-dialtone)

[outgoing-dialtone]
exten => _911,1,Gosub(call_911_911,s,1)
exten => _211,1,Macro(dial,+18666986155)
; twilio 911 test
exten => _933,1,Gosub(call_911_933,s,1)
; voip.ms 911 test, which must be in this format for some reason
exten => _15555550911,1,Macro(dial,${EXTEN})
; information numbers blocked by provider go to operator
exten => _NXX5551212,1,Goto(operator,s,1)
exten => _1NXX5551212,1,Goto(operator,s,1)
; 11 digit prefixed with 1: NANPA e.164, normalize with + prefix
exten => _1XXXXXXXXXX,1,Macro(filterdial,+${EXTEN})
; 10 digit not prefixed with 1 or 0: NANPA, normalize to e.164 with +1 prefix
exten => _NXXXXXXXXX,1,Macro(filterdial,+1${EXTEN})
; 14 digit prefixed with 011 1: NANPA with international and country code,
; normalize to e.164 with + prefix and no international code
exten => _0111XXXXXXXXXX,1,Macro(filterdial,+${EXTEN:3})
; 15 digit prefixed with 011 52: Mexico (no cell?)
; with international and country code,
; normalize to e.164 with + prefix and no international code
exten => _01152XXXXXXXXXX,1,Macro(filterdial,+${EXTEN:3})
; 12 digit prefixed with 52: Mexico (no cell?) e.164, normalize with + prefix
exten => _52XXXXXXXXXX,1,Macro(filterdial,+${EXTEN})
exten => _0,1,Goto(operator,s,1)
;exten => _#,1,Goto(outgoing-ivr,s,1)
exten => i,1,Busy               ; on invalid annoy caller

[restricted-outgoing-dialtone-wrapper]
exten => s,1,Gosub(metric,s,1(restricted-outgoing-dialtone-wrapper))
same => n,DISA(no-password,restricted-outgoing-dialtone)

[restricted-outgoing-dialtone]
exten => _911,1,Gosub(call_911_911,s,1)
exten => _211,1,Macro(dial,+18666986155)
; 911 test
exten => _933,1,Macro(dial,${EXTEN})
; voip.ms 911 test, which must be in this format for some reason
exten => _15555550911,1,Macro(dial,${EXTEN})
; operator goes directly to operator voicemail
exten => _0,1,VoiceMail(1337,u)
exten => i,1,Busy               ; on invalid annoy caller

[internal-dialtone-wrapper]
exten => s,1,Gosub(metric,s,1(internal-dialtone-wrapper))
same => n,DISA(no-password,internal-dialtone)
exten => i,1,Busy               ; on invalid annoy caller

[internal-dialtone]
; dialtone that lets us call selected 3-digit extensions
exten => _5XX,1,Dial(SIP/${EXTEN}@twilio-pv-termination)
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-${EXTEN}))
exten => _6XX,1,Dial(SIP/${EXTEN})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-${EXTEN}))
exten => _7XX,1,Dial(SIP/${EXTEN}@twilio-pv-termination)
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-${EXTEN}))

; Start recording of all channels to unique filename.
[operator-pre]
exten => s,1,NoOp
same => n,AGI(get_filename.agi)
same => n,MixMonitor(${agi_out}.wav,b)
same => n,Return

[followme-operator]
; context to define extensions for op destinations and op actions
; outgoingcontext variable isn't surviving to here, so we are using a hardcoded
; provider. This is OK because we don't deplete on dialtone capacity.
exten => ${karl_cell},1,Dial(SIP/${karl_cell}@voipms,,U(operator-pre))
exten => ${elijah_cell},1,Dial(SIP/${elijah_cell}@voipms,,U(operator-pre))
exten => ${xnor_cell},1,Dial(SIP/${xnor_cell}@voipms,,U(operator-pre))
exten => ${brandon},1,Dial(SIP/${brandon}@voipms,,U(operator-pre))
exten => ${mathew},1,Dial(SIP/${mathew}@voipms,,U(operator-pre))
exten => ${alma_frankenstein},1,Dial(SIP/${alma_frankenstein}@voipms,,U(operator-pre))
exten => ${will_caruana},1,Dial(SIP/${will_caruana}@voipms,,U(operator-pre))
exten => ${michelle_kline},1,Dial(SIP/${michelle_kline}@voipms,,U(operator-pre))
exten => ${mykle_cell},1,Dial(SIP/${mykle_cell}@voipms,,U(operator-pre))
exten => ${emily_wilson},1,Dial(SIP/${emily_wilson}@voipms,,U(operator-pre))
exten => ${jesse_cell},1,Dial(SIP/${jesse_cell}@voipms,,U(operator-pre))
; ; allow ops to transfer callers
; exten => 995,1,Goto(outgoing-dialtone-wrapper,s,1)
; ; may need to transfer back to main...
; exten => 999,1,Goto(outgoing_portland,s,1)

[record]
    exten => s,1,Gosub(metric,s,1(record))
    same => n,AGI(record_statements.agi)

[trimet-transit-tracker]
    exten => s,1,Gosub(metric,s,1(trimet-transit-tracker))
    same => n,Macro(dial,+15032387433)

[lib-account-line]
    exten => s,1,Gosub(metric,s,1(lib-account-line))
    same => n,Macro(dial,+15039885342)

[cnet-portal]
    exten => s,1,Gosub(metric,s,1(cnet-portal))
    same => n,Macro(dial,+19149401363)

; get random destination from script and call it
[dark-fiber]
exten => s,1,Gosub(metric,s,1(dark-fiber))
same => n,AGI(dark_fiber.agi)
same => n,Macro(dial,${agi_out})

[pla-interface]
exten => s,1,Gosub(metric,s,1(pla-interface))
same => n,Macro(dial,+15056086123)

[pink-phone]
exten => s,1,Gosub(metric,s,1(pink-phone))
same => n,Macro(dial,+17737992961)

[current-time]
    exten => s,1,Gosub(metric,s,1(current-time))
    same => n,SayUnixTime()

[current-time-ypsi]
    exten => s,1,Gosub(metric,s,1(current-time-ypsi))
    same => n,SayUnixTime(,EST5EDT)

[info-211]
    exten => s,1,Gosub(metric,s,1(info-211))
    same => n,Macro(dial,+18666986155)

[random-number]
; read back a random number to the caller
exten => s,1,Gosub(metric,s,1(random-number))
same => n(random-number),NoOp
same => n,set(current=${RAND(0,99)})
same => n,Macro(say,your-random-number-is,utilities)
same => n(current-number),NoOp
same => n,SayNumber(${current})
same => n(postsetup),NoOp
same => n,Macro(say,to-hear-number-again,utilities)
same => n,Macro(say,press-one,utilities)
same => n,Macro(say,for-a-random-number,utilities)
same => n,Macro(say,press-two,utilities)
same => n,WaitExten(0.25)
same => n,Goto(s,postsetup)
exten => 1,1,Goto(s,current-number)
exten => 2,1,Goto(s,random-number)
exten => #,1,Return
exten => i,1,Goto(s,postsetup)

[futel-conf]
    ; incoming ConfBridge
    exten => s,1,Gosub(metric,s,1(futel-conf))
    same => n,ConfBridge(666,futel_conf,futel_conf_user,futel_conf_menu)

[mojave-conference]
exten => s,1,Gosub(metric,s,1(mojave-conference))
same => n,Macro(dial,+17607339969)

[mental-health-crisis]
exten => s,1,Gosub(metric,s,1(mental-health-crisis))
same => n,Macro(dial,+15039884888)

[call-to-safety]
; https://calltosafety.org/
exten => s,1,Gosub(metric,s,1(call-to-safety))
same => n,Macro(dial,+15032355333)

[suicide-hotline]
; national suicide prevention lifeline https://suicidepreventionlifeline.org/
exten => s,1,Gosub(metric,s,1(suicide-hotline))
same => n,Macro(dial,+18002738255)

[obamaphone-oregon]
; assurance wireless
exten => s,1,Gosub(metric,s,1(obamaphone-oregon))
same => n,Macro(dial,+18883215880)

[obamaphone-michigan]
; at&t mobility 
exten => s,1,Gosub(metric,s,1(obamaphone-michigan))
same => n,Macro(dial,+18003779450)

[operator]
exten => s,1,Gosub(metric,s,1(operator))
same => n,Macro(setup-iteration)
same => n(postsetup),NoOp
same => n,Macro(iterate-guard)
same => n,UserEvent(OperatorAttempt)
same => n,Macro(say,please-hold)
same => n,Macro(say,for-the-next-available-operator)
same => n,FollowMe(operator,d)
; if we got here, no operator accepted
same => n,Gosub(metric,s,1(operator-nopickup))
same => n,UserEvent(OperatorNoPickup)
same => n,VoiceMail(1337,u)
; on invalid repeat, this at least lets panicky users think about what
; they're doing during the intro statements
exten => i,1,Goto(s,postsetup)

; submenu to call out from a conference
; XXX this is an unfiltered DID
; [add-futel-conf]
;     exten => s,1,Gosub(metric,s,1(add-futel-conf))
;     ; read a phone number from user and store it in ${did}
;     same => n,Read(did,,11)
;     ; TODO use ${outgoing_channel} for the sip trunk
;     same => n,Originate(SIP/callcentric-tishbite/${did},exten,futel-conf)

[longmont]
exten => s,1,Gosub(metric,s,1(longmont))
same => n,Macro(setup-iteration)
same => n(postsetup),NoOp
same => n,Macro(iterate-guard)
same => n,AGI(random_file_strip.agi,${asterisk_root}/var/lib/asterisk/sounds/futel/longmont)
same => n,Background(${agi_out})
same => n,Return
exten => i,1,Return

[payphone-radio]
exten => s,1,Gosub(metric,s,1(payphone-radio))
same => n,Macro(setup-iteration)
same => n(postsetup),NoOp
same => n,Macro(iterate-guard)
same => n,MP3Player(http://104.167.4.67:8136/stream)
same => n,Return
exten => i,1,Return

[shady-bbs]
exten => s,1,Gosub(metric,s,1(shady-bbs))
same => n,Macro(dial,+18134695930)

#include extensions_secret.conf
#include extensions_holdthephone.conf
#include extensions_oracle.conf
#include extensions_robotron.conf

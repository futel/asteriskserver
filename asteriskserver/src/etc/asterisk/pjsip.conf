[transport-udp]
type = transport
protocol = udp
bind = 0.0.0.0

; twilio elastic sip
[twilio]
type = endpoint
transport = transport-udp
aors = twilio-aors
outbound_auth = twilio-auth
context = default-incoming
disallow = all
allow = ulaw
allow = alaw
allow = gsm

; twilio programmable voice
[twilio-pv]
type = endpoint
transport = transport-udp
aors = twilio-pv-aors
outbound_auth = twilio-pv-auth
;context = default-incoming
disallow = all
allow = ulaw
allow = alaw
allow = gsm

[twilio-auth]
type = auth
auth_type = userpass

; elastic sip termination
[twilio-aors]
type = aor
contact = sip:futel.pstn.twilio.com

; programmable voice termination
[twilio-pv-aors]
type = aor
contact = sip:termination-prod.futel.sip.us1.twilio.com

[twilio-pv-auth]
type = auth
auth_type = userpass
username = termination

; origination
[twilio-identify]
type = identify
endpoint = twilio
match = 54.172.60.0
match = 54.172.60.1
match = 54.172.60.2
match = 54.172.60.3

; origination                                                             
[twilio-pv-identify]
type = identify
endpoint = twilio-pv
; XXX does this survive dns changes                                       
match = termination-stage.futel.sip.us1.twilio.com

[voipms]
type = endpoint
transport = transport-udp
context = default-incoming
disallow = all
allow = ulaw
allow = alaw
allow = gsm
; XXX same auth for both? do we need (inbound) auth?
auth = voipms-auth
outbound_auth = voipms-auth
aors = voipms-aor
; NAT parameters
rtp_symmetric = yes
rewrite_contact = yes
send_rpid = yes

[voipms-registration]
type = registration
transport = transport-udp
outbound_auth = voipms-auth

[voipms-auth]
type = auth
auth_type = userpass

[voipms-identify]
type = identify
endpoint = voipms
match = sanjose.voip.ms

[voipms-aor]
type = aor

; extensions

[extension-endpoint](!)
type = endpoint
transport = transport-udp
disallow = all
allow = ulaw
context = default-outgoing
; for client behind NAT                                                   
rtp_symmetric = yes

[extension-auth](!)
type = auth
auth_type = userpass

[extension-aor](!)
type = aor
max_contacts = 1
; Keep the UDP session open by checking for registration frequently.
; This doesn't help the client re-register after network issues or if the
; asterisk or VPN server changes.
; If we don't qualify, clients become unreachable if they don't connect
; outgoing for a period of time. But if we do,
; we consider them unreachable if they don't qualify,
; which might be wrong.
; They can make outgoing calls, but the server still won't consider
; them reachable until they qualify again.
qualify_frequency = 60

; 500: thirtysecond
[500](extension-endpoint)
auth = 500-auth
aors = 500
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15034681337     ; voipms_leet_incoming

[500-auth](extension-auth)
username=500

[500](extension-aor)

; 505: saratoga
[505](extension-endpoint)
auth = 505-auth
aors = 505
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15033889637     ; twilio_saratoga_incoming

[505-auth](extension-auth)
username=505

[505](extension-aor)

; 510: central
[510](extension-endpoint)
auth = 510-auth
aors = 510
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15034836584    ; twilio_central_incoming

[510-auth](extension-auth)
username=510

[510](extension-aor)

; 515: breckenridge
[515](extension-endpoint)
auth = 515-auth
aors = 515
set_var = outgoing_context=outgoing_detroit
set_var = callerid=+13132469283    ; twilio_breckenridgest_incoming

[515-auth](extension-auth)
username=515

[515](extension-aor)

; 520: cesar chavez
[520](extension-endpoint)
auth = 520-auth
aors = 520
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15039465227     ; twilio_cesarchavez_incoming

; 520: cesar chavez
[520-auth](extension-auth)
username=520

[520](extension-aor)

; 521: cesar chavez personal
[521](extension-endpoint)
auth = 520-auth
aors = 520
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15034681337     ; voipms_leet_incoming

[521-auth](extension-auth)
username=520

[521](extension-aor)

; 535: sjac
[535](extension-endpoint)
auth = 535-auth
aors = 535
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15034681337     ; voipms_leet_incoming

[535-auth](extension-auth)
username=535

[535](extension-aor)

; 540: hedron
[540](extension-endpoint)
auth = 540-auth
aors = 540
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15034681337     ; voipms_leet_incoming

[540-auth](extension-auth)
username=540

[540](extension-aor)

; 615-619: robotron
[615](extension-endpoint)
auth = 615-auth
aors = 615
set_var= outgoing_context=outgoing_portland
set_var= callerid=+15039266341    ; twilio_robotron_incoming

[615-auth](extension-auth)
username=615

[615](extension-aor)

; 620-624: souwester
[620](extension-endpoint)auth = 620-auth
aors = 620
set_var= outgoing_context=outgoing_souwester
set_var= callerid=+13602282259     ; twilio_souwester_incoming

[620-auth](extension-auth)
username=620

[620](extension-aor)

; 625-629: upright
[625](extension-endpoint)
auth = 625-auth
aors = 625
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15034681337     ; voipms_leet_incoming

[625-auth](extension-auth)
username=625

[625](extension-aor)

; 630-634: ypsi
[630](extension-endpoint)
auth = 630-auth
aors = 630
set_var = outgoing_context=outgoing_ypsi
set_var = callerid=+17345476651    ; ypsi incoming

[630-auth](extension-auth)
username=630

[630](extension-aor)

; 640-644: alley27
[640](extension-endpoint)
auth = 640-auth
aors = 640
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15039288465    ; twilio_alley27_incoming

[640-auth](extension-auth)
username=640

[640](extension-aor)

; 655-659: taylor
[655](extension-endpoint)
auth = 655-auth
aors = 655
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15039266271     ; twilio_garth_incoming

[655-auth](extension-auth)
username=655

[655](extension-aor)

; 670-674: r2d2
[670](extension-endpoint)
auth = 670-auth
aors = 670
set_var = outgoing_context=outgoing-dialtone-wrapper
set_var = callerid=+15033828838     ; twilio_r2d2_incoming

[670-auth](extension-auth)
username=670

[670](extension-aor)

; 680-684: ainsworth
[680](extension-endpoint)
auth = 680-auth
aors = 680
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15034449412     ; twilio_ainsworth_incoming

[680-auth](extension-auth)
username=680

[680](extension-aor)

; 690-694: detroit bus co
[690](extension-endpoint)
auth = 690-auth
aors = 690
set_var = outgoing_context=outgoing_detroit
set_var = callerid=+13133327495    ; twilio_detroitbusco_incoming

[690-auth](extension-auth)
username=690

[690](extension-aor)

; 695-699: eighth
[695](extension-endpoint)
auth = 695-auth
aors = 695
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15039266188    ; twilio_eighth_incoming

[695-auth](extension-auth)
username=695

[695](extension-aor)

; 700-704: demo, event
[700](extension-endpoint)
auth = 700-auth
aors = 700
set_var = outgoing_context=outgoing_portland
set_var = callerid=+15034681337     ; voipms_leet_incoming

[700-auth](extension-auth)
username=700

[700](extension-aor)

#include pjsip_secret.conf
#include pjsip_secret_flavored.conf

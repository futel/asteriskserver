## Deploy an asterisk server to Digital Ocean

## Requirements and test

Have no Digital Ocean droplets or domains named futel-stage.phu73l.net.
Have no Digital Ocean images named baseinstall.
Create or check out release branch.

Run unit tests locally

  cd src/var/lib/asterisk/agi-bin
  python3 -m unittest discover test

Run integration tests on virtualbox

  cd /opt/asterisk/itest
  sudo -u asterisk ./itest.sh

Validate requirements and configuration locally

  ansible-playbook -i deploy/hosts deploy/requirements_conf_prod_playbook.yml
  ansible-playbook -K -i deploy/hosts deploy/requirements_packages_generic_playbook.yml
  packer validate -var-file=conf/variables.pkr.hcl deploy/centos_baseinstall_template.pkr.hcl

## Create baseinstall image

  packer build -var-file=conf/variables.pkr.hcl deploy/template.pkr.hcl

## Build droplet from baseinstall image

  ansible-playbook -i deploy/hosts deploy/update_assets_playbook.yml
  ansible-playbook -i deploy/hosts deploy/find_stage_conf_playbook.yml

Note stage conf version printed.

XXX we should yum update here

  ansible-playbook -i deploy/hosts deploy/stage_from_snapshot_playbook.yml --vault-password-file=conf/vault_pass_digitalocean.txt --extra-vars snapshot=baseinstall

Note IP address printed.
Wait for DNS to match IP address with "nslookup futel-stage.phu73l.net".

  ansible-playbook -i deploy/hosts --limit baseinstall deploy/secure_playbook.yml
  ansible-playbook -i deploy/hosts deploy/update_asterisk_playbook.yml --limit baseinstall --vault-password-file=conf/vault_pass_generic.txt
  ansible-playbook -i deploy/hosts deploy/update_secrets_playbook.yml --limit baseinstall --vault-password-file=conf/vault_pass_prod.txt --extra-vars conf_version=<stage conf version>  
  ansible-playbook -i deploy/hosts deploy/sync_playbook.yml
If sync_playbook failed, preserve any recordings downloaded to tmp/stage/recordings
  ansible-playbook -i deploy/hosts --limit baseinstall deploy/post_sync_playbook.yml

if testplan has changed since last release branch, update google sheet testplan,
keeping dates of nonupdated completed tests
test stage against google sheet testplan

## promote stage to prod

  ansible-playbook -i deploy/hosts hostname_playbook.yml
rename futel-prod.phu73l.net droplet to futel-prod-back
rename futel-stage.phu73l.net droplet to futel-prod.phu73l.net
  ansible-playbook -i deploy/hosts deploy/sync_playbook.yml
If sync_playbook failed, preserve any recordings downloaded to tmp/stage/recordings
  ansible-playbook -i deploy/hosts deploy/post_sync_playbook.yml
remove A record for futel-stage.phu73l.net (in own DO domain interface)
change A record for futel-prod.phu73l.net to point to new futel-prod.phu73l.net
point all callcentric DID forwarding rules to extensions corresponding to new conf_version on futel-prod.phu73l.net
  futel-r2d2 user to foo|bar
point all voip.ms DID forwarding rules to subaccounts corresponding to new conf_version on futel-prod.phu73l.net
  185060_prod-foo|bar subaccount
wait for DNS to propagate with "nslookup futel-prod.phu73l.net"
make a snapshot of futel-prod-back

ansible-playbook -i deploy/hosts deploy/post_promote_playbook.yml --vault-password-file=conf/vault_pass_digitalocean.txt

remove snapshots of futel-prod-back except for most recent

test that prod outgoing calls work
test that prod incoming call to incoming line works
test that prod incoming calls to extensions work or get channel unavailable
test that prod incoming calls to extensions work (may take time)

## update iptables

This is done after a new vpnbox is deployed.

  ansible-playbook -i deploy/hosts --limit baseinstall deploy/secure_playbook_prod.yml

[global]
endpoint_identifier_order = username,ip

[transport-udp]
type = transport
protocol = udp
bind = 0.0.0.0

; Twilio endpoint. This was intended for Twilio Elastic SIP, but since
; there is an identify with an IP address which points to this
; endpoint, *any* connection from those Twilio addresses will use this
; endpoint, regardless of how it auths. Note that this means that *any*
; connection from Twilio will go to this endpoint, without authentication,
; including from other Twilio customers! The destinations in the context
; used must be appropriate for that!
; In practice, for our use, this means that Twilio Programmable Voice and
; Twilio Services use this also, as well as Twilio Elastic SIP.
[twilio]
type = endpoint
transport = transport-udp
aors = twilio-aors
outbound_auth = twilio-auth
context = incoming_twilio
disallow = all
allow = ulaw
allow = alaw
allow = gsm

[twilio-auth]
type = auth
auth_type = userpass

[twilio-aors]
type = aor
contact = sip:futel.pstn.twilio.com

; This was intended for Twilio Elastic SIP origination, but the IP
; addresses appear to be used by all Twilio connections.
; https://www.twilio.com/docs/sip-trunking/ip-addresses
[twilio-identify]
type = identify
endpoint = twilio
match = 54.172.60.0/30
match = 54.244.51.0/30

; voipms termination
[voipms]
type = endpoint
transport = transport-udp
context = voipms-incoming
disallow = all
allow = ulaw
allow = alaw
allow = gsm
; XXX same auth for both? do we need (inbound) auth?
auth = voipms-auth
outbound_auth = voipms-auth
aors = voipms-aor
; NAT parameters
rtp_symmetric = yes
rewrite_contact = yes
send_rpid = yes

[voipms-registration]
type = registration
transport = transport-udp
outbound_auth = voipms-auth

[voipms-auth]
type = auth
auth_type = userpass

[voipms-identify]
type = identify
endpoint = voipms
match = sanjose.voip.ms

[voipms-aor]
type = aor

; bulkvs termination
[bulkvs]
type = endpoint
transport = transport-udp
aors = bulkvs-aors
outbound_auth = bulkvs-auth
;context = voipms-incoming                                                
disallow = all
allow = ulaw
;allow = alaw                                                             
;allow = gsm                                                              
;auth = voipms-auth                                                       
; NAT parameters                                                          
;rtp_symmetric = yes
;rewrite_contact = yes
;send_rpid = yes

[bulkvs-registration]
type = registration
transport = transport-udp
outbound_auth = bulkvs-auth
server_uri = sip:sip.bulkvs.com:5060

[bulkvs-auth]
type = auth
auth_type = userpass

[bulkvs-aors]
type = aor
qualify_frequency = 23

[bulkvs-identify]
type = identify
endpoint = bulkvs
match = 199.255.157.198/32
match = 162.249.171.198/32
match = 69.12.88.198/32
match = 76.8.29.198/32

; Extensions for our SIP clients.

[extension-endpoint](!)
type = endpoint
transport = transport-udp
disallow = all
allow = ulaw
; for client behind NAT
; send media to address we got it from, ignoring client's headers
rtp_symmetric = yes
; clients may not send media to each other, only to us
; this is unfortunate for our bandwidth
direct_media = no
identify_by = username

[extension-auth](!)
type = auth
auth_type = userpass

[extension-aor](!)
type = aor
max_contacts = 1
; Keep the UDP session open by checking for registration frequently.
; This doesn't help the client re-register after network issues or if the
; asterisk or VPN server changes.
; If we don't qualify, clients become unreachable if they don't connect
; outgoing for a period of time. But if we do,
; we consider them unreachable if they don't qualify,
; which might be wrong.
; They can make outgoing calls, but the server still won't consider
; them reachable until they qualify again.
qualify_frequency = 60

; 400-403: maple
[400](extension-endpoint)
auth = 400-auth
aors = 400
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming

[400-auth](extension-auth)
username=400

[400](extension-aor)

; 401: maple basement
[401](extension-endpoint)
auth = 401-auth
aors = 401
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming
[401-auth](extension-auth)
username=401
[401](extension-aor)

; 402: maple office
[402](extension-endpoint)
auth = 402-auth
aors = 402
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming
[402-auth](extension-auth)
username=402
[402](extension-aor)

; 403: maple booth
[403](extension-endpoint)
auth = 403-auth
aors = 403
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming
[403-auth](extension-auth)
username=403
[403](extension-aor)

; 405: saratoga
[405](extension-endpoint)
auth = 405-auth
aors = 405
context = outgoing-portland-destination
set_var = callerid=+15033889637     ; twilio_saratoga_incoming

[405-auth](extension-auth)
username=405

[405](extension-aor)

; 410: central
[410](extension-endpoint)
auth = 410-auth
aors = 410
context = outgoing-portland-destination
set_var = callerid=+15034836584    ; twilio_central_incoming

[410-auth](extension-auth)
username=410

[410](extension-aor)

; 415: breckenridge
[415](extension-endpoint)
auth = 415-auth
aors = 415
context = outgoing-detroit-destination
set_var = callerid=+13132469283    ; twilio_breckenridgest_incoming

[415-auth](extension-auth)
username=415

[415](extension-aor)

; 416: breckenridge personal
[416](extension-endpoint)
auth = 416-auth
aors = 416
context = outgoing-detroit-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming

[416-auth](extension-auth)
username=416

[416](extension-aor)

; 435: sjac
; 440: hedron

; 445: microcosm
[445](extension-endpoint)
auth = 445-auth
aors = 445
context = outgoing-portland-destination
set_var = callerid=+15032945966 ; twilio_microcosm_incoming

[445-auth](extension-auth)
username=445

[445](extension-aor)

; 615-619: robotron
[615](extension-endpoint)
auth = 615-auth
aors = 615
context = outgoing-portland-destination
set_var= callerid=+15039266341    ; twilio_robotron_incoming

[615-auth](extension-auth)
username=615

[615](extension-aor)

; 620-624: souwester
[620](extension-endpoint)
auth = 620-auth
aors = 620
context = outgoing-souwester-destination
set_var= callerid=+13602282259     ; twilio_souwester_incoming

[620-auth](extension-auth)
username=620

[620](extension-aor)

; 625-629: upright
[625](extension-endpoint)
auth = 625-auth
aors = 625
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming

[625-auth](extension-auth)
username=625

[625](extension-aor)

; 630-634: ypsi
[630](extension-endpoint)
auth = 630-auth
aors = 630
context = outgoing-ypsi-destination
set_var = callerid=+17345476651    ; ypsi incoming

[630-auth](extension-auth)
username=630

[630](extension-aor)

; 640-644: alley27
[640](extension-endpoint)
auth = 640-auth
aors = 640
context = outgoing-portland-destination
set_var = callerid=+15039288465    ; twilio_alley27_incoming

[640-auth](extension-auth)
username=640

[640](extension-aor)

; 655-659: taylor
[655](extension-endpoint)
auth = 655-auth
aors = 655
context = outgoing-portland-destination
set_var = callerid=+15039266271     ; twilio_garth_incoming

[655-auth](extension-auth)
username=655

[655](extension-aor)

; 670: r2d2

; 680-684: ainsworth
[680](extension-endpoint)
auth = 680-auth
aors = 680
context = outgoing-portland-destination
set_var = callerid=+15034449412     ; twilio_ainsworth_incoming

[680-auth](extension-auth)
username=680

[680](extension-aor)

; 690-694: detroit bus co
[690](extension-endpoint)
auth = 690-auth
aors = 690
context = outgoing-detroit-destination
set_var = callerid=+13133327495    ; twilio_detroitbusco_incoming

[690-auth](extension-auth)
username=690

[690](extension-aor)

; 695-699: eighth
[695](extension-endpoint)
auth = 695-auth
aors = 695
context = outgoing-portland-destination
set_var = callerid=+15039266188    ; twilio_eighth_incoming

[695-auth](extension-auth)
username=695

[695](extension-aor)

; 700-704: demo, event, test
[700](extension-endpoint)
auth = 700-auth
aors = 700
context = challenge_toorcamp_main
set_var = callerid=+15034681337     ; voipms_leet_incoming

[700-auth](extension-auth)
username=700

[700](extension-aor)

[701](extension-endpoint)
auth = 701-auth
aors = 701
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming

[701-auth](extension-auth)
username=701

[701](extension-aor)

[702](extension-endpoint)
auth = 702-auth
aors = 702
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming

[702-auth](extension-auth)
username=702

[702](extension-aor)

[703](extension-endpoint)
auth = 703-auth
aors = 703
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming

[703-auth](extension-auth)
username=703

[703](extension-aor)

[704](extension-endpoint)
auth = 704-auth
aors = 704
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming

[704-auth](extension-auth)
username=704

[704](extension-aor)

; 710-714: portable
[710](extension-endpoint)
auth = 710-auth
aors = 710
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming

[710-auth](extension-auth)
username=710

[710](extension-aor)

[711](extension-endpoint)
auth = 711-auth
aors = 711
context = outgoing-portland-destination
set_var = callerid=+15034681337     ; voipms_leet_incoming

[711-auth](extension-auth)
username=711

[711](extension-aor)

#include pjsip_secret.conf
#include pjsip_secret_flavored.conf

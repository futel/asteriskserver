[general]
clearglobalvars=no

[globals]
TRUNK=DAHDI/G2
twilio_r2d2_incoming=+15033828838
twilio_taylor_incoming=+15039266271
twilio_ainsworth_incoming=+15034449412
twilio_ypsi_incoming=+17345476651
;twilio_alley27_incoming=+15039288465
twilio_robotron_incoming=+15039266341
twilio_souwester_incoming=+13602282259
twilio_eighth_incoming=+15039266188
twilio_breckenridge_incoming=+13132469283
twilio_detroitbusco_incoming=+13133327495
twilio_central_incoming=+15034836584
twilio_saratoga_incoming=+15033889637
twilio_cesarchavez_incoming=+15039465227
twilio_sjac_incoming=+15032126899
twilio_microcosm_incoming=+15032945966
twilio_pv_incoming=999
max_iterations=10

[metric]
exten => s,1,AGI(metric.agi,${ARG1})
same => n,Return

[voipms-incoming]
exten => _!,1,Gosub(metric,s,1(voipms-incoming))
same => n,Goto(incoming_leet,s,1)

; Extension to start a call from a Twilio SIP connection, in practice this is a
; Twilio Elastic SIP connection, used by incoming calls from a Twilio phone number or a SIP
; Dial verb from a Twilio service.
[twilio-incoming]
exten => _!,1,Gosub(metric,s,1(twilio-incoming))
; clients registered to twilio programmable voice are reaching us by a sip
; ; call from twilio, route accouring to how twilio describes their authorization.
; ; name <authname>;...
; same => n,Set(tmp=${PJSIP_HEADER(read,From)})
; ; <authname>;...
; same => n,Set(tmp=${CUT(tmp, ,2)})
; ; <authname>
; same => n,Set(authname=${CUT(tmp,\;,1)})
; ... we don't do anything with authname after this, but maybe we need it
; for some origination...
; Callers from twilio origination:
; set caller to the number called, which is in PJSIP_HEADER(To).
same => n,Set(callto=${CUT(CUT(PJSIP_HEADER(read,To),@,1),:,2)})
same => n,Goto(incoming-route-by-callto,s,1)

[incoming-route-by-callto]
; Route to appropriate context based on call origin.
exten => s,1,NoOp
; Incoming call from Twilio Programmable Voice service, which dials 999. This is a kluge.
same => n,gotoIf($["${callto}" = "${twilio_pv_incoming}"]?outgoing-by-calling-extension,s,1)
; Incoming call from twilio, addressed to number forwarded.
same => n,gotoIf($["${callto}" = "${twilio_r2d2_incoming}"]?ring_r2d2,s,1)
same => n,gotoIf($["${callto}" = "${twilio_taylor_incoming}"]?ring_taylor,s,1)
same => n,gotoIf($["${callto}" = "${twilio_ainsworth_incoming}"]?ring_ainsworth,s,1)
same => n,gotoIf($["${callto}" = "${twilio_ypsi_incoming}"]?ring_ypsi,s,1)
;same => n,gotoIf($["${callto}" = "${twilio_alley27_incoming}"]?ring_alley27,s,1)
same => n,gotoIf($["${callto}" = "${twilio_robotron_incoming}"]?ring_robotron,s,1)
same => n,gotoIf($["${callto}" = "${twilio_souwester_incoming}"]?ring_souwester,s,1)
same => n,gotoIf($["${callto}" = "${twilio_eighth_incoming}"]?ring_eighth,s,1)
same => n,gotoIf($["${callto}" = "${twilio_breckenridge_incoming}"]?ring_breckenridge,s,1)
same => n,gotoIf($["${callto}" = "${twilio_detroitbusco_incoming}"]?ring_detroitbusco,s,1)
same => n,gotoIf($["${callto}" = "${twilio_central_incoming}"]?ring_central,s,1)
same => n,gotoIf($["${callto}" = "${twilio_saratoga_incoming}"]?ring_saratoga,s,1)
same => n,gotoIf($["${callto}" = "${twilio_cesarchavez_incoming}"]?ring_cesarchavez,s,1)
same => n,gotoIf($["${callto}" = "${twilio_sjac_incoming}"]?ring_sjac,s,1)
same => n,gotoIf($["${callto}" = "${twilio_microcosm_incoming}"]?ring_microcosm,s,1)
; Fallback, go to the incoming menu.
same => n,Goto(incoming_leet,s,1)

; Context to start outgoing call. This is the default context for the SIP endpoints used by
; clients with a direct SIP connection to this server, like all of our phones.
; All clients should dial 999, everything else is used for testing.
[default-outgoing]
exten => 988,1,Set(destination=challenge_incoming_main)
same => n,Goto(outgoing-by-destination,s,1)
exten => 989,1,Set(destination=challenge_main)
same => n,Goto(outgoing-by-destination,s,1)
exten => 992,1,Set(destination=outgoing_safe)
same => n,Goto(outgoing-by-destination,s,1)
exten => 993,1,Set(destination=member_main)
same => n,Goto(outgoing-by-destination,s,1)
exten => 994,1,Set(destination=outgoing_ypsi)
same => n,Goto(outgoing-by-destination,s,1)
exten => 995,1,Set(destination=outgoing_portland)
same => n,Goto(outgoing-by-destination,s,1)
exten => 996,1,Set(destination=restricted-outgoing-dialtone-wrapper)
same => n,Goto(outgoing-by-destination,s,1)
exten => 998,1,Set(destination=admin_main)
same => n,Goto(outgoing-by-destination,s,1)
; 999 dialed by public phone SIP clients
exten => 999,1,Goto(outgoing-by-calling-extension,s,1)
; 1000 used by r2d2, obsolete?
exten => 1000,1,Set(destination=outgoing-dialtone-wrapper)
same => n,Goto(outgoing-by-destination,s,1)
; 1001 used by incoming line, obsolete because voipms now has its own context?
exten => 1001,1,Set(destination=incoming_leet)
same => n,Goto(outgoing-by-destination,s,1)

[outgoing-by-destination]
; go to a destination determined by a variable value
exten => s,1,Gosub(metric,s,1(outgoing-by-destination))
same => n,Set(CALLERID(num)=${callerid})
same => n,Goto(${destination},s,1)

[outgoing-by-calling-extension]
exten => s,1,Gosub(metric,s,1(outgoing-by-calling-extension))
same => n,Set(CALLERID(num)=${callerid})
same => n,Goto(${outgoing_context},s,1)

[outgoing-dialtone-wrapper]
exten => s,1,Gosub(metric,s,1(outgoing-dialtone-wrapper))
same => n,DISA(no-password,outgoing-dialtone)

[outgoing-dialtone]
exten => _911,1,Gosub(call_911_911,s,1)
exten => _211,1,Goto(dial,+18666986155,1)
; twilio 911 test
exten => _933,1,Gosub(call_911_933,s,1)
; information numbers blocked by provider go to operator
exten => _NXX5551212,1,Goto(operator,s,1)
exten => _1NXX5551212,1,Goto(operator,s,1)
; 11 digit prefixed with 1: NANPA e.164, normalize with + prefix
exten => _1XXXXXXXXXX,1,Goto(filterdial,+${EXTEN},1)
; 10 digit not prefixed with 1 or 0: NANPA, normalize to e.164 with +1 prefix
exten => _NXXXXXXXXX,1,Goto(filterdial,+1${EXTEN},1)
; 14 digit prefixed with 011 1: NANPA with international and country code,
; normalize to e.164 with + prefix and no international code
exten => _0111XXXXXXXXXX,1,Goto(filterdial,+${EXTEN:3},1)
; 15 digit prefixed with 011 52: Mexico (no cell?)
; with international and country code,
; normalize to e.164 with + prefix and no international code
exten => _01152XXXXXXXXXX,1,Goto(filterdial,+${EXTEN:3},1)
; 12 digit prefixed with 52: Mexico (no cell?) e.164, normalize with + prefix
exten => _52XXXXXXXXXX,1,Goto(filterdial,+${EXTEN},1)
exten => _0,1,Goto(operator,s,1)
; rather than track how we got here, send user to outgoing_safe on #
exten => _#,1,Goto(outgoing_safe,s,1)
exten => i,1,Busy               ; on invalid annoy caller

[restricted-outgoing-dialtone-wrapper]
exten => s,1,Gosub(metric,s,1(restricted-outgoing-dialtone-wrapper))
same => n,DISA(no-password,restricted-outgoing-dialtone)

[restricted-outgoing-dialtone]
exten => _911,1,Gosub(call_911_911,s,1)
exten => _211,1,Goto(dial,+18666986155,1) ;XXX multnomah cty only?
; 911 test
exten => _933,1,Goto(dial,${EXTEN},1)
; operator goes directly to operator voicemail
exten => _0,1,VoiceMail(1337,u)
exten => i,1,Busy               ; on invalid annoy caller

[internal-dialtone-wrapper]
exten => s,1,Gosub(metric,s,1(internal-dialtone-wrapper))
same => n,DISA(no-password,internal-dialtone)
exten => i,1,Busy               ; on invalid annoy caller

[internal-dialtone]
; dialtone that lets us call selected 3-digit extensions
exten => _4XX,1,Dial(PJSIP/${EXTEN})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-${EXTEN}))
exten => _5XX,1,Dial(PJSIP/${EXTEN})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-${EXTEN}))
exten => _6XX,1,Dial(PJSIP/${EXTEN})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-${EXTEN}))
exten => _7XX,1,Dial(PJSIP/${EXTEN})
same => n,Gosub(metric,s,1(incoming-dialstatus-${DIALSTATUS}-${EXTEN}))

; Start recording of all channels to unique filename.
[operator-pre]
exten => s,1,NoOp
same => n,AGI(get_filename.agi)
same => n,MixMonitor(${agi_out}.wav,b)
same => n,Return

[followme-operator]
; context to define extensions for op destinations and op actions
; outgoingcontext variable isn't surviving to here, so we are using a hardcoded
; provider. This is OK because we don't deplete on dialtone capacity.
exten => 10,1,Dial(PJSIP/${karl_cell}@voipms,,U(operator-pre))
exten => 11,1,Dial(PJSIP/${elijah_cell}@voipms,,U(operator-pre))
exten => 12,1,Dial(PJSIP/${xnor_cell}@voipms,,U(operator-pre))
exten => 14,1,Dial(PJSIP/${mathew}@voipms,,U(operator-pre))
exten => 15,1,Dial(PJSIP/${alma_frankenstein}@voipms,,U(operator-pre))
exten => 17,1,Dial(PJSIP/${michelle_kline}@voipms,,U(operator-pre))
exten => 18,1,Dial(PJSIP/${mykle_cell}@voipms,,U(operator-pre))
exten => 19,1,Dial(PJSIP/${emily_wilson}@voipms,,U(operator-pre))
exten => 20,1,Dial(PJSIP/${jesse_cell}@voipms,,U(operator-pre))
exten => 21,1,Dial(PJSIP/${jakob_vanlammeren}@voipms,,U(operator-pre))
; ; allow ops to transfer callers
; exten => 995,1,Goto(outgoing-dialtone-wrapper,s,1)
; ; may need to transfer back to main...
; exten => 999,1,Goto(outgoing_portland,s,1)

[trimet-transit-tracker]
    exten => s,1,Gosub(metric,s,1(trimet-transit-tracker))
    same => n,Goto(dial,+15032387433,1)

[lib-account-line]
    exten => s,1,Gosub(metric,s,1(lib-account-line))
    same => n,Goto(dial,+15039885342,1)

[cnet-portal]
    exten => s,1,Gosub(metric,s,1(cnet-portal))
    same => n,Goto(dial,+19149401363,1)

; get random destination from script and call it
[dark-fiber]
exten => s,1,Gosub(metric,s,1(dark-fiber))
same => n,AGI(dark_fiber.agi)
same => n,Goto(dial,${agi_out},1)

[pla-interface]
exten => s,1,Gosub(metric,s,1(pla-interface))
same => n,Goto(dial,+15056086123,1)

[pink-phone]
exten => s,1,Gosub(metric,s,1(pink-phone))
same => n,Goto(dial,+17737992961,1)

[current-time]
    exten => s,1,Gosub(metric,s,1(current-time))
    same => n,SayUnixTime()

[current-time-ypsi]
    exten => s,1,Gosub(metric,s,1(current-time-ypsi))
    same => n,SayUnixTime(,EST5EDT)

[info-211]
    exten => s,1,Gosub(metric,s,1(info-211))
    same => n,Goto(dial,+18666986155,1)

; Enter conf as a user.
[futel-conf]
    exten => s,1,Gosub(metric,s,1(futel-conf))
    same => n,ConfBridge(666,futel_conf,futel_conf_user,futel_conf_menu)

; Enter conf as an admin.
[futel-conf-admin]
    exten => s,1,Gosub(metric,s,1(futel-conf))
    same => n,ConfBridge(666,futel_conf,futel_conf_admin,futel_conf_menu)

[futel-conf-payphones]
    exten => s,1,Gosub(metric,s,1(futel-conf-dial))
    ; Note that this distorts the confbridge participant count. The caller is not sent back to
    ; the confbridge until the callee answers, even though they are still counted as a participant.
    ; To avoid this, we send the caller back to the conference immediately, but this means that they
    ; are counted twice.
    same => n,Dial(Local/s@directory_random_payphone,,G(goto-conf))
    ; Caller is sent here.    
    same => n(goto-conf),Goto(futel-conf,s,1)
    ; Callee is sent here.
    same => n,Goto(futel-conf,s,1)

[mojave-conference]
exten => s,1,Gosub(metric,s,1(mojave-conference))
same => n,Goto(dial,+17607339969,1)

[mental-health-crisis]
exten => s,1,Gosub(metric,s,1(mental-health-crisis))
same => n,Goto(dial,+15039884888,1)

[call-to-safety]
; https://calltosafety.org/
exten => s,1,Gosub(metric,s,1(call-to-safety))
same => n,Goto(dial,+15032355333,1)

[suicide-hotline]
; national suicide prevention lifeline https://suicidepreventionlifeline.org/
exten => s,1,Gosub(metric,s,1(suicide-hotline))
same => n,Goto(dial,+18002738255,1)

[obamaphone-oregon]
; assurance wireless
exten => s,1,Gosub(metric,s,1(obamaphone-oregon))
same => n,Goto(dial,+18883215880,1)

[obamaphone-michigan]
; at&t mobility 
exten => s,1,Gosub(metric,s,1(obamaphone-michigan))
same => n,Goto(dial,+18003779450,1)

; submenu to call out from a conference
; XXX this is an unfiltered DID
; [add-futel-conf]
;     exten => s,1,Gosub(metric,s,1(add-futel-conf))
;     ; read a phone number from user and store it in ${did}
;     same => n,Read(did,,11)
;     ; TODO use ${outgoing_channel} for the sip trunk
;     same => n,Originate(SIP/xyzzy/${did},exten,futel-conf)

[shady-bbs]
exten => s,1,Gosub(metric,s,1(shady-bbs))
same => n,Goto(dial,+18134695930,1)

#include extensions_secret.conf

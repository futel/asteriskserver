---
- name: load secrets
  include_vars: "deploy_digitalocean_secrets_digitalocean.yml"
  no_log: true
- name: set fact for volume name
  set_fact:
    volume_name: "assets{{ ansible_facts.date_time.epoch }}"
- name: get IDs of all volume snapshots
  community.digitalocean.digital_ocean_snapshot_info:
    snapshot_type: volume
    oauth_token: "{{ deploy_access_token }}"
  register: resp_out
- name: extract snapshot data from response
  set_fact:
    snapshots: "{{ resp_out.data }}"
- name: sort snapshot data
  set_fact:
    snapshots: "{{ snapshots | sort(attribute='created_at') }}"
- debug: msg="snapshots {{ snapshots }}"
# loop through all snapshots and set the id, the last one is the one we end up with
- name: get ID of volume snapshot
  set_fact:
    snapshot_id: "{{ item.id }}"
  loop: "{{ snapshots | json_query(name) }}"
  vars:
    name: "[?starts_with(name, 'assetsbuild')]"
# XXX Note that if this playbook has been run twice, we will create and attach a new storage.
#     This is probably not a problem because we ignore the previous ones when mounting, but we will
#     still have an unmounted storage attached (that we are paying for).
- name: create block storage from image
  community.digitalocean.digital_ocean_block_storage:
    state: present
    command: create
    oauth_token: "{{ deploy_access_token }}"
    snapshot_id: "{{ snapshot_id }}"
    volume_name: "{{ volume_name }}"
- name: get attributes of stage droplet
  community.digitalocean.digital_ocean_droplet_info:
    oauth_token: "{{ deploy_access_token }}"
    name: futel-stage.phu73l.net
  register: resp_out
- name: attach block storage to droplet
  community.digitalocean.digital_ocean_block_storage:
    state: present
    command: attach
    oauth_token: "{{ deploy_access_token }}"
    volume_name: "{{ volume_name }}"
    region: sfo3
    droplet_id: "{{ resp_out.data[0].id }}"

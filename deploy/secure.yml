# We are using iptables, the more modern toolkit is firewalld and we may
# need to convert to that at some point.
---
- name: install epel yum package
  yum:
    name:
      - epel-release
- name: install yum packages
  yum:
    name:
      - iptables-services
      - firewalld
      - openvpn
    state: present
- name: stop and disable firewalld
  ansible.builtin.systemd:
    name: firewalld
    state: stopped
    enabled: no
    masked: yes
- name: write sshd config
  copy:
    src: ../src/sshd_config
    dest: /etc/ssh/sshd_config
- name: restart sshd
  ansible.builtin.systemd:
    name: sshd
    state: restarted
- name: install openvpn client config and creds
  copy:
    src: ../src/etc/openvpn/client/{{ item }}
    dest: /etc/openvpn/client
    owner: root
    group: root
  with_items:
    - ca.crt
    - client.conf
    - client-asteriskserver-foo.crt
    - client-asteriskserver-bar.crt    
    - client-asteriskserver-foo.key
    - client-asteriskserver-bar.key    
- name: symlink openvpn client creds
  ansible.builtin.file:
    src: /etc/openvpn/client/client-asteriskserver-{{ conf_version }}.crt
    dest: /etc/openvpn/client/client.crt
    state: link
    owner: root
    group: root
- name: symlink openvpn client creds
  ansible.builtin.file:
    src: /etc/openvpn/client/client-asteriskserver-{{ conf_version }}.key
    dest: /etc/openvpn/client/client.key
    state: link
    owner: root
    group: root
- name: install openvpn client scripts
  copy:
    src: ../src/etc/openvpn/client/{{ item }}
    dest: /etc/openvpn/client
    owner: root
    group: root
    mode: a+x
  with_items:
    - client.down
    - client.up
- name: enable and start openvpn client services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - openvpn-client@client
- name: enable iptables
  ansible.builtin.systemd:
    name: iptables
    enabled: yes
- name: enable ip6tables
  ansible.builtin.systemd:
    name: ip6tables
    enabled: yes

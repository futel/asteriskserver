# Setup for Twilio SIP registration endpoint, Programmable Voice, TwiML Bin

## asterisk server creds

have SIP extension 700, 701
have SIP password PASSWORD (same for all extensions)

## twilio creds

have credential termination:PASSWORD
have extension credential list usernames 700:PASSWORD, 701:PASSWORD, ...

## configure twilio functions

enable ACCOUNT_SID and AUTH_TOKEN
environment variables:
stage_termination_uri sip:999@futel-stage.phu73l.net
stage_origination_host origination-stage.futel.sip.us1.twilio.com
prod_termination_uri sip:999@futel-prod.phu73l.net
stage_origination_host origination-prod.futel.sip.us1.twilio.com
password PASSWORD (asterisk sip extension common password)

## create twilio functions for origination

friendly name origination-stage
path origination-stage
body:

usernameFromSip = function(sipAddress) {
    // eg "sip:+15035551212@foobar.sip.us1.twilio.com";
    sipAddress = sipAddress.replace("sip:", "");
    sipAddress = sipAddress.replace(/@.*/, "");
    return sipAddress;
};

exports.handler = function(context, event, callback) {
    var sipUri = context.stage_termination_uri;
    var client = context.getTwilioClient();
    var username = event.From;
    username = usernameFromSip(username);
    let twiml = new Twilio.twiml.VoiceResponse();
    twiml.dial().sip(
        {username:username, password: context.password},
        sipUri);
    callback(null, twiml);
};

friendly name origination-prod
path origination-prod
body:

usernameFromSip = function(sipAddress) {
    // eg "sip:+15035551212@foobar.sip.us1.twilio.com";
    sipAddress = sipAddress.replace("sip:", "");
    sipAddress = sipAddress.replace(/@.*/, "");
    return sipAddress;
};

exports.handler = function(context, event, callback) {
    var sipUri = context.prod_termination_uri;
    var client = context.getTwilioClient();
    var username = event.From;
    username = usernameFromSip(username);
    let twiml = new Twilio.twiml.VoiceResponse();
    twiml.dial().sip(
        {username:username, password: context.password},
        sipUri);
    callback(null, twiml);
};

## create twilio functions for termination

friendly name termination-stage
path termination-stage
body:

usernameFromSip = function(sipAddress) {
    // eg "sip:+15035551212@foobar.sip.us1.twilio.com";
    sipAddress = sipAddress.replace("sip:", "");
    sipAddress = sipAddress.replace(/@.*/, "");
    return sipAddress;
};

exports.handler = function(context, event, callback) {
    var sipHost = context.stage_origination_host;
    var client = context.getTwilioClient();
    var username = event.To;
    username = usernameFromSip(username);
    let twiml = new Twilio.twiml.VoiceResponse();
    twiml.dial().sip(username + "@" + sipHost);
    callback(null, twiml);
};

friendly name termination-prod
path termination-prod
body:

usernameFromSip = function(sipAddress) {
    // eg "sip:+15035551212@foobar.sip.us1.twilio.com";
    sipAddress = sipAddress.replace("sip:", "");
    sipAddress = sipAddress.replace(/@.*/, "");
    return sipAddress;
};

exports.handler = function(context, event, callback) {
    var sipHost = context.prod_origination_host;
    var client = context.getTwilioClient();
    var username = event.To;
    username = usernameFromSip(username);
    let twiml = new Twilio.twiml.VoiceResponse();
    twiml.dial().sip(username + "@" + sipHost);
    callback(null, twiml);
};

## set up SIP domains for origination

Friendly name: origination-stage
SIP URI: origination-stage.futel (.sip.twilio.com)
Call control configuration: function: origination-stage
Voice authentication: credential lists: 700, 701
SIP registration: enabled        
SIP Registration Authentication: credential lists: 700, 701

Friendly name: origination-prod
SIP URI: origination-prod.futel (.sip.twilio.com)
Call control configuration: function: origination-prod
Voice authentication: credential lists: 700, 701
SIP registration: enabled        
SIP Registration Authentication: credential lists: 700, 701

## set up SIP domains for termination

Friendly name: termination-stage
SIP URI: termination-stage.futel (.sip.twilio.com)
Call control configuration: function: termination-stage
Voice authentication: credential lists: termination
SIP registration: disabled

Friendly name: termination-prod
SIP URI: termination-prod.futel (.sip.twilio.com)
Call control configuration: function: termination-prod
Voice authentication: credential lists: termination
SIP registration: disabled

## set up incoming numbers
XXX friendly name stage tester
XXX call comes in: function: origination-stage

## set up client

register to sip:700@origination-stage.futel.sip.us1.twilio.com
register to sip:700@origination-prod.futel.sip.us1.twilio.com
same for 701
password is as for credential list for 700, 701

## test

register
dial any number, get outgoing-by-calling-extension context for 700
have server Dial(SIP/700@twilio-pv-termination), registered client gets call

XXX todo
test having multiple termination clients same creds - stage and prod
sketch how to have multiple prod asterisk servers
- origination and termination
- map extensions to server
- switch batches of extensions over by updating map


# Adding new extensions

Add extension to asterisk with same password as exisiting extensions
Add cred to credential list with extension as name and unique password
Add credential to voice and SIP for origination-stage, origination-prod SIP domains

